---
import type {
  AuthorFragment,
  EventSinglePageQuery,
  InsightsListItemFragment,
  InsightsSinglePageQuery,
  NewsroomListItemFragment,
  NewsroomSinglePageQuery,
} from '@/__generated__/cms';

import ArticleBar from '@/components/ArticleBar.astro';
import ArticlesGrid from '@/components/ArticlesGrid.astro';
import EventInformation from '@/components/EventInformation.astro';
import ModulesIncluder from '@/components/ModulesIncluder.astro';
import SectionTitle from '@/components/partials/SectionTitle.astro';
import Top from '@/components/partials/Top.astro';
import Sidebar from '@/components/sidebar/Sidebar.astro';
import SidebarCardAuthor from '@/components/sidebar/SidebarCardAuthor.astro';
import SidebarCardTableOfContents from '@/components/sidebar/SidebarCardTableOfContents.astro';
import SidebarEventCTA from '@/components/sidebar/SidebarEventCTA.astro';
import Container from '@/components/ui/Container.astro';
import Grid from '@/components/ui/Grid.astro';
import Section from '@/components/ui/Section.astro';
import { TRANSLATIONS } from '@/constants';
import { getLocale } from '@/i18n/utils';
import Layout from '@/layouts/Layout.astro';
import { buildTOC } from '@/scripts/buildTOC';
import { parseTags } from '@/scripts/data-parsers/parseTag';
import { overwriteWYSIWYGContent } from '@/scripts/overwriteWYSIWYGContent';
import { initializeStore } from '@/scripts/store';
import { cmsStore } from '@/stores/cmsStore';
import type { ColumnSizes } from '@/types';

type InsightsSingleProps = {
  postType: 'insights';
  data: InsightsSinglePageQuery;
};
type NewsroomSingleProps = {
  postType: 'newsroom';
  data: NewsroomSinglePageQuery;
};
type EventSingleProps = {
  postType: 'event';
  data: EventSinglePageQuery;
};
interface ArticlePageProps {
  lang: string;
}
type Props = (InsightsSingleProps | NewsroomSingleProps | EventSingleProps) &
  ArticlePageProps;

const { postType, data, lang } = Astro.props;

const page = data.page!;

initializeStore(cmsStore, {
  primaryMenu: data.primaryMenu!,
  themeOptions: data.themeOptions!,
  subpageSettings: data.page?.subpageSettings,
});

overwriteWYSIWYGContent(page.modules?.modulesContent, {
  RICH_TEXT_CONTENT_HEADINGS_IDS: true,
});

const { subpageSettings } = page;
const pageTitle = page?.title ?? '';
const title = subpageSettings?.customTitle || pageTitle || '';
const introduction = subpageSettings?.introduction || '';
const image = subpageSettings?.image;
const size = (subpageSettings?.topDistribution ?? '5-7') as ColumnSizes;
const tags = parseTags(page.tags?.nodes);
const category = page.categories?.nodes?.[0]?.name;
const toc = buildTOC(page.modules?.modulesContent);
let lastUpdated: string | undefined;
let author: AuthorFragment | undefined;
let posts: (InsightsListItemFragment | NewsroomListItemFragment)[] = [];

if (page.__typename === 'InsightsItem' || page.__typename === 'NewsroomItem') {
  if (page.modified) {
    lastUpdated = new Date(page.modified).toLocaleDateString(getLocale(lang), {
      day: '2-digit',
      month: 'long',
      year: 'numeric',
    });
  }

  if (page.articleAcf?.author?.node.__typename === 'PostAuthor') {
    author = page.articleAcf.author.node;
  }
}

if (postType === 'insights' || postType === 'newsroom') {
  posts = (data?.articles?.nodes ?? []).filter(Boolean);
  posts = posts.filter((post) => post.uri !== data.page?.uri).slice(0, 3);
}
---

<Layout
  name={postType}
  pageTitle={pageTitle}
  htmlClassName="scroll-smooth scroll-p-4"
>
  <Top
    overline={TRANSLATIONS.EVENT}
    title={title}
    titleSize="h2"
    content={introduction}
    image={image}
    size={size}
    class="py-8 md:pt-18 md:pb-14"
  >
    {
      postType === 'event' && page.__typename === 'Event' && (
        <Fragment slot="details">
          <EventInformation
            location={page.eventAcf?.eventLocation}
            date={page.eventAcf?.eventDate}
            language={page.eventAcf?.eventLanguage}
          />
        </Fragment>
      )
    }
    <ArticleBar
      details={{
        Category: category,
        'Last updated': lastUpdated,
      }}
      tags={tags}
      sharing
      class="mt-8 md:mt-12"
    />
  </Top>
  <Section bg="white" class="pt-0 md:pt-0">
    <Container>
      <Grid class="gap-y-8">
        <div
          class="col-span-full md:col-start-1 lg:col-start-2 md:col-end-9 order-2 md:order-1 flex flex-col gap-8 md:gap-14"
        >
          <ModulesIncluder category="article" data={page?.modules} />
        </div>
        <Sidebar
          sticky
          class="col-span-full md:col-start-9 lg:col-start-10 md:col-end-13 order-1 md:order-2"
        >
          <SidebarCardAuthor author={author} />
          {
            postType === 'insights' ||
              (postType === 'newsroom' && (
                <SidebarCardTableOfContents toc={toc} />
              ))
          }
          {
            page.__typename === 'Event' && (
              <SidebarEventCTA location={page.eventAcf?.eventLocation} />
            )
          }
        </Sidebar>
      </Grid>
    </Container>
  </Section>
  {
    posts.length > 0 && (
      <Section bg="surface-background">
        <Container>
          <SectionTitle withMargin headline={TRANSLATIONS.MORE_STORIES} />
          <ArticlesGrid posts={posts} />
        </Container>
      </Section>
    )
  }
</Layout>
