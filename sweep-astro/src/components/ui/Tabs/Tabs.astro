---
import type { HTMLAttributes } from 'astro/types';
import { cn } from '@/scripts/cn';

type Props = HTMLAttributes<'div'>;

const { class: className, ...props } = Astro.props;
---

<div {...props} class={cn('tabs', className)}>
  <slot />
</div>

<script>
  import { Tab } from 'bootstrap';

  const triggerTabListItem = document.querySelectorAll('button.tab-list-item');

  triggerTabListItem.forEach((triggerEl) => {
    const tabTrigger = new Tab(triggerEl);

    triggerEl.addEventListener('click', (event) => {
      event.preventDefault();
      tabTrigger.show();
    });
    triggerEl.addEventListener('show.bs.tab', () => {
      const list = triggerEl.closest('.tab-list');
      if (!list) return;

      const rect = triggerEl.getBoundingClientRect();
      const listRect = list.getBoundingClientRect();

      list.scroll({
        left: rect.left - listRect.left,
      });
      // triggerEl.scrollIntoView();
    });
  });
</script>

<style lang="scss">
  :global(.tab-content) {
    & > :global(.tab-pane) {
      @apply hidden;
    }

    & > :global(.active) {
      @apply block;
    }
  }

  :global(.fade) {
    transition: all 150ms linear;
    transition-property: opacity, transform;
    @media (prefers-reduced-motion: reduce) {
      @apply transition-none;
    }
  }

  :global(.fade:not(.show)) {
    opacity: 0;
  }
</style>
