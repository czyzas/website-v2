---
import type { VariantProps } from 'class-variance-authority';
import type { HTMLAttributes } from 'astro/types';
import { Icon } from 'astro-icon/components';
import { cn } from '@/scripts/cn';
import type { WithAttributes } from '@/types';
import { buttonVariants } from './buttonVariants';

type ButtonProps = {
  leadingIcon?: string;
  trailingIcon?: string;
  asLink?: boolean;
};

type AttributesLink = HTMLAttributes<'a'>;
type AttributesButton = HTMLAttributes<'button'>;
type Attributes = AttributesButton & AttributesLink;

type Props = WithAttributes<
  Attributes & ButtonProps & VariantProps<typeof buttonVariants>
>;

const {
  class: className,
  asLink = false,
  variant = 'primary',
  leadingIcon = '',
  trailingIcon = '',
  ...props
} = Astro.props;

const Tag = asLink ? 'a' : 'button';
---

<Tag {...props} class={cn(buttonVariants({ variant }), className)}>
  {!!leadingIcon && <Icon name={leadingIcon} class="w-[1.125em] h-[1.125em]" />}
  <slot />
  {
    !!trailingIcon && (
      <Icon name={trailingIcon} class="w-[1.125em] h-[1.125em]" />
    )
  }
</Tag>
