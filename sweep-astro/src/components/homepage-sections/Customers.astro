---
import { cmsStore } from '@/stores/cmsStore';
import { getStore } from '@/scripts/store';
import { parseSectionTitle } from '@/scripts/data-parsers/parseSectionTitle';
import { linkShouldRender } from '@/scripts/data-parsers/parseLink';
import Container from '../ui/Container.astro';
import SectionTitle from '../partials/SectionTitle.astro';
import ButtonContainer from '../ButtonContainer.astro';
import Section from '../ui/Section.astro';
import LogosCollection from '../LogosCollection.astro';
import WordpressButtonLink from '../WordpressButtonLink.astro';

interface Props {
  type: 1 | 2;
}

const { type } = Astro.props;

const store = getStore(cmsStore);
const data = store.homepage!;
const acf =
  type === 1 ? data.homepage!.customers1! : data.homepage!.customers2!;
const button = type === 1 ? data.homepage!.customers1?.button : undefined;

const customersList = acf.customersList?.nodes ?? [];
const logos = customersList
  .map((customer) => {
    if (customer.__typename !== 'Customer') return null;

    return customer.customerAcf?.logo ?? null;
  })
  .filter(Boolean);
---

<Section name="customers">
  <Container>
    <SectionTitle
      withMargin
      {...parseSectionTitle(acf.sectionTitle?.selectSectionTitle)}
    />
    <LogosCollection logos={logos} />
    {
      linkShouldRender(button) && (
        <ButtonContainer class="md:mt-8">
          <WordpressButtonLink data={button} arrow />
        </ButtonContainer>
      )
    }
  </Container>
</Section>
