---
import { Image } from 'astro:assets';
import { cmsStore } from '@/stores/cmsStore';
import { getStore } from '@/scripts/store';
import { parseSectionTitle } from '@/scripts/data-parsers/parseSectionTitle';
import { parseImage } from '@/scripts/data-parsers/parseImage';
import type { ParsedImage } from '@/scripts/data-parsers/parseImage';
import { parseLink } from '@/scripts/data-parsers/parseLink';
import { cn } from '@/scripts/cn';
import { buildPath } from '@/scripts/buildPath';
import Container from '../ui/Container.astro';
import Button from '../ui/Button.astro';
import Grid from '../ui/Grid.astro';
import SectionTitle from '../partials/SectionTitle.astro';
import Card from '../ui/Card.astro';
import ButtonContainer from '../ButtonContainer.astro';

const store = getStore(cmsStore);
const data = store.homepage!;
const acf = data.homepage!.caseStudies!;
const button = parseLink(acf.button);
const cases = acf.caseStudies?.nodes ?? [];
---

<section class="case-studies py-12 md:py-20">
  <Container>
    <SectionTitle {...parseSectionTitle(acf.sectionTitle)} />
    <Grid>
      {
        cases.length > 0 &&
          cases.map((caseStudy, index) => {
            if (caseStudy.__typename !== 'CaseStudy') return null;
            const isFeatured = index === 0;
            const image = parseImage(caseStudy.subpageSettings?.image);
            let customer = caseStudy.caseStudyAcf?.relatedCustomer?.nodes[0];
            if (customer?.__typename !== 'Customer') customer = undefined;
            let customerLogo: ParsedImage | undefined;
            if (customer) {
              customerLogo = parseImage(customer.customerAcf?.logo);
            }

            return (
              <div
                class={cn('case-study', 'col-span-full lg:col-span-6', {
                  'lg:col-span-full': isFeatured,
                })}
              >
                <Card
                  class={cn(
                    'overflow-hidden h-full p-0 bg-sw-surface-subdued',
                    'grid gap-5 lg:min-h-[26.25rem] grid-cols-2',
                    {
                      'lg:grid-cols-12': isFeatured,
                    }
                  )}
                >
                  <div
                    class={cn(
                      'content-column flex flex-col p-6 col-span-full md:col-span-1',
                      {
                        'lg:col-span-4': isFeatured,
                      }
                    )}
                  >
                    {!!customer && (
                      <Fragment>
                        {customerLogo?.shouldRender && (
                          <Card class="customer-logo p-3 w-36 h-20 max-w-full flex items-center justify-center mb-8">
                            <Image
                              src={customerLogo.url}
                              alt={customerLogo.alt}
                              width={customerLogo.width}
                              height={customerLogo.height}
                              class="max-h-full max-w-full object-contain"
                            />
                          </Card>
                        )}
                        <div class="customer-details typography-card-title flex flex-col mb-4">
                          <span>{customer.title}</span>
                          {!!customer.customerAcf?.category && (
                            <span class="text-sw-text-subdued">
                              {customer.customerAcf?.category}
                            </span>
                          )}
                        </div>
                      </Fragment>
                    )}
                    <h3
                      set:html={caseStudy.title}
                      class="typography-cards-bold-large"
                    />

                    <div class="mt-auto pt-8">
                      <Button
                        asLink
                        trailingIcon="arrow-right"
                        href={buildPath(caseStudy.uri)}
                        variant="secondary"
                      >
                        {acf.caseStudyButtonLabel}
                      </Button>
                    </div>
                  </div>
                  <div
                    class={cn(
                      'image-column aspect-[16/9] col-span-full md:aspect-auto md:col-span-1',
                      {
                        'lg:col-span-8': isFeatured,
                      }
                    )}
                  >
                    {image.shouldRender && (
                      <Image
                        src={image.url}
                        alt={image.alt}
                        width={image.width}
                        height={image.height}
                        class="object-cover w-full h-full"
                      />
                    )}
                  </div>
                </Card>
              </div>
            );
          })
      }
    </Grid>
    {
      button.shouldRender && (
        <ButtonContainer class="mt-8 md:mt-15">
          <Button asLink href={button.url} target={button.target}>
            {button.title}
          </Button>
        </ButtonContainer>
      )
    }
  </Container>
</section>
