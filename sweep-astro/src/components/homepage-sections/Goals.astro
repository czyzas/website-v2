---
import { kebabCase } from 'lodash-es';
import { cmsStore } from '@/stores/cmsStore';
import { getStore } from '@/scripts/store';
import { parseSectionTitle } from '@/scripts/data-parsers/parseSectionTitle';
import { parseLink } from '@/scripts/data-parsers/parseLink';
import { cleanArray } from '@/scripts/cleanArray';
import Tabs from '../ui/Tabs/Tabs.astro';
import TabList from '../ui/Tabs/TabList.astro';
import TabListItem from '../ui/Tabs/TabListItem.astro';
import TabPane from '../ui/Tabs/TabPane.astro';
import Container from '../ui/Container.astro';
import Button from '../ui/Button.astro';
import SectionTitle from '../partials/SectionTitle.astro';
import Prose from '../ui/Prose.astro';
import CardWithBigImage from '../CardWithBigImage.astro';
import Section from '../ui/Section.astro';

const store = getStore(cmsStore);
const data = store.homepage!;
const acf = data.homepage!.goals!;

const tabs = cleanArray(acf.tabs);
---

<Section name="goals" bg="white">
  <Container>
    <SectionTitle
      withMargin
      {...parseSectionTitle(acf.sectionTitle?.selectSectionTitle)}
    />
    <Tabs>
      <TabList>
        {
          tabs.map((tab, index) => (
            <TabListItem
              id={['goal', kebabCase(tab!.tabTitle), index].join('-')}
              isActive={index === 0}
              set:html={tab!.tabTitle}
            />
          ))
        }
      </TabList>
      <div class="tab-content mt-10">
        {
          tabs.map((tab, index) => {
            const button = parseLink(tab?.button);

            return (
              <TabPane
                id={['goal', kebabCase(tab!.tabTitle), index].join('-')}
                isActive={index === 0}
              >
                <CardWithBigImage image={tab?.image}>
                  <p class="typography-subhead mb-2">{tab?.overline}</p>
                  <h3 class="typography-h3 mb-8" set:html={tab?.title} />
                  <Prose set:html={tab?.content} />
                  {button.shouldRender && (
                    <div class="mt-8">
                      <Button
                        asLink
                        href={button.url}
                        target={button.target}
                        trailingIcon="arrow-right"
                        class="w-full md:w-auto"
                      >
                        {button.title}
                      </Button>
                    </div>
                  )}
                </CardWithBigImage>
              </TabPane>
            );
          })
        }
      </div>
    </Tabs>
  </Container>
</Section>
