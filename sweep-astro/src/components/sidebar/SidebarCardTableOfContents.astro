---
import type { ITableOfContentsEntry } from '@/types';
import { cn } from '@/scripts/cn';
import { getTranslations } from '@/scripts/translations';
import SidebarCard from './SidebarCard.astro';

type Props = {
  toc?: ITableOfContentsEntry[];
};
const { toc } = Astro.props;
const TRANSLATIONS = getTranslations();
---

<script>
  import { $gated } from '@/scripts/client/atoms/gated';

  const cards =
    document.querySelectorAll<HTMLElement>('.table-of-contents-sidebar-card') ??
    [];

  $gated.subscribe((value) => {
    for (const card of cards) {
      card.style.display = value ? 'none' : '';
    }
  });
</script>

{
  !!toc && toc.length > 0 && (
    <SidebarCard
      collapsible
      title={TRANSLATIONS.sidebar.tableOfContents}
      name="table-of-contents-sidebar-card"
    >
      <ul>
        {toc.map((entry) => (
          <li class={cn('mt-1.5', { 'mt-0.5': entry.level > 2 })}>
            <a
              href={`#${entry.id}`}
              class={cn('hover:underline', {
                'ml-4 text-sw-text-subdued': entry.level > 2,
              })}
            >
              {entry.label}
            </a>
          </li>
        ))}
      </ul>
    </SidebarCard>
  )
}
