---
import type { HTMLAttributes } from 'astro/types';
import type { ModulesModulesContentBackgroundColor } from '@/__generated__/cms';
import { parseBgColor } from '@/scripts/data-parsers/parseBgColor';
import type { ModuleMeta, WithAttributes } from '@/types';
import { cn } from '@/scripts/cn';
import Section from './ui/Section.astro';
import Container from './ui/Container.astro';

type Props = WithAttributes<
  {
    meta: ModuleMeta;
    name: string;
    bg?: ModulesModulesContentBackgroundColor;
    padding?: boolean;
    containerClass?: string;
  } & HTMLAttributes<'div'>
>;

const {
  class: className,
  meta,
  name,
  bg,
  padding: rawPadding = true,
  containerClass,
  ...props
} = Astro.props;

let padding = rawPadding;
let background = bg;
let containerSize: 'default' | 'full' = 'default';
if (meta.moduleType === 'article') {
  padding = false;
  background = undefined;
  containerSize = 'full';
}
---

<style>
  section.module {
    @apply py-12;
    @media screen(md) {
      @apply py-20;
    }
  }

  section.module.section-title {
    &:not(.with-bottom-padding) {
      @apply pb-0;
    }

    &.display-as-overline {
      @apply pt-2.5;
    }

    & + section.module:not(.no-padding) {
      @apply pt-12;
    }
  }

  section.module.no-padding {
    @apply p-0;
  }
</style>

<Section
  {...props}
  padding={false}
  name={`module ${name}`}
  bg={background ? parseBgColor(bg) : 'none'}
  class={cn({ 'no-padding': !padding }, className)}
>
  <Container
    size={containerSize}
    margin={meta.moduleType === 'default'}
    class={cn(containerClass)}
  >
    <slot />
  </Container>
</Section>
