---
import type { HTMLAttributes } from 'astro/types';
import { isNil } from 'lodash-es';
import { cn } from '@/scripts/cn';
import type { FilterTag } from '@/types';
import { buildI18nPath } from '@/i18n/utils';
import { getStore } from '@/scripts/store';
import { languageStore } from '@/stores/languageStore';
import { TRANSLATIONS } from '@/constants';
import Card from './ui/Card.astro';

interface ListTagFilterProps extends HTMLAttributes<'div'> {
  tags?: FilterTag[];
  activeTag?: string;
  prefix?: string;
  allButton?: boolean;
  sectionId?: string;
}
type Props = ListTagFilterProps;

const {
  class: className,
  tags: rawTags,
  prefix = '',
  activeTag = '',
  allButton = false,
  sectionId: rawSectionId = '',
  ...props
} = Astro.props;
const { currentLanguage } = getStore(languageStore);
const lang = currentLanguage.code;

const tags = (rawTags ?? []).filter(
  (tag) => tag && !isNil(tag.name) && !isNil(tag.slug)
);

if (allButton) {
  // Add additional `All` tag to filters
  tags.unshift({ name: TRANSLATIONS.ALL, slug: '' });
}

const sectionId = rawSectionId ? `#${rawSectionId}` : '';
---

<div {...props} class={cn('')}>
  {
    tags.length > 0 && (
      <div
        class={cn(
          'list-tag-filter',
          'grid grid-cols-[repeat(auto-fit,minmax(180px,1fr))] gap-2',
          className
        )}
      >
        {tags.map((tag) => (
          <a
            href={buildI18nPath(
              tag.slug
                ? [prefix, 'tag', `${tag.slug}${sectionId}`]
                : `${prefix}${sectionId}`,
              lang
            )}
            data-active={activeTag === tag.slug ? 'true' : 'false'}
            class="group"
          >
            <Card class="flex h-full items-center justify-center bg-white p-3 text-center text-base font-medium transition-colors group-hover:bg-sw-surface-subdued group-data-[active=true]:border-transparent group-data-[active=true]:bg-sw-sky-400 group-data-[active=true]:text-white">
              {tag.name}
            </Card>
          </a>
        ))}
      </div>
    )
  }
</div>
