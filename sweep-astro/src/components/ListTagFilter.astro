---
import type { HTMLAttributes } from 'astro/types';
import { isNil } from 'lodash-es';
import type { FilterTag, WithAttributes } from '@/types';
import { buildI18nPath } from '@/i18n/utils';
import { TRANSLATIONS } from '@/constants';
import { getLanguage } from '@/scripts/utils-store-helpers';
import CardLinks from './CardLinks.astro';

interface ListTagFilterProps extends HTMLAttributes<'div'> {
  tags?: FilterTag[];
  activeTag?: string;
  prefix?: string;
  allButton?: boolean;
  sectionId?: string;
}
type Props = WithAttributes<ListTagFilterProps>;

const {
  class: className,
  tags: rawTags,
  prefix = '',
  activeTag = '',
  allButton = false,
  sectionId: rawSectionId = '',
  ...props
} = Astro.props;
const { currentLanguage } = getLanguage();

const tags = (rawTags ?? []).filter(
  (tag) => tag && !isNil(tag.name) && !isNil(tag.slug)
);

if (allButton && tags.length > 0) {
  // Add additional `All` tag to filters
  tags.unshift({ name: TRANSLATIONS.ALL, slug: '' });
}

const sectionId = rawSectionId ? `#${rawSectionId}` : '';

const tagLinks = tags.map((tag) => ({
  isActive: activeTag === tag.slug,
  link: {
    url: buildI18nPath(
      tag.slug
        ? [prefix, 'tag', `${tag.slug}${sectionId}`]
        : `${prefix}${sectionId}`,
      currentLanguage
    ),
    title: tag.name,
  },
}));
---

<CardLinks {...props} links={tagLinks} class={className} />
