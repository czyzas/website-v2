---
import { Icon } from 'astro-icon/components';
import { getStore } from '@/scripts/store';
import { languageStore } from '@/stores/languageStore';
import { buildI18nPath } from '@/i18n/utils';
import MenuItem from './MenuItem.astro';

const id = `dropdown-${crypto.randomUUID().substring(16)}`;

const { currentLanguage, languages: rawLanguages } = getStore(languageStore);
const languages = (rawLanguages ?? []).filter(Boolean);

// TODO: close popover when clicked outside
// TODO: link to current page translation if possible
---

<script>
  import { computePosition, flip, shift, autoUpdate } from '@floating-ui/dom';

  const buttons = Array.from(
    document.querySelectorAll<HTMLButtonElement>(
      'button[data-action="toggle-language-switcher"]'
    )
  );

  for (const button of buttons) {
    const relatedDropdown = button.nextElementSibling as HTMLElement;
    if (relatedDropdown) {
      const updatePosition = () => {
        computePosition(button, relatedDropdown, {
          placement: 'bottom',
          middleware: [flip(), shift()],
        }).then(({ x, y }) => {
          relatedDropdown.style.setProperty('left', `${x}px`);
          relatedDropdown.style.setProperty('top', `${y}px`);
        });
      };

      autoUpdate(button, relatedDropdown, updatePosition);

      button.addEventListener('click', () => {
        const state = button.ariaPressed === 'true';
        const nextState = !state ? 'true' : 'false';
        button.ariaPressed = nextState;
        relatedDropdown.ariaHidden = state ? 'true' : 'false';
      });
    }
  }
</script>

<div class="language-switcher-container relative">
  <MenuItem
    asButton
    type="button"
    data-action="toggle-language-switcher"
    aria-controls={id}
    aria-pressed="false"
  >
    <span class="text-sm sm:text-base">
      {currentLanguage.code.toUpperCase()}
    </span>
    <Icon name="caret-down" />
  </MenuItem>
  {
    languages && (
      <ul
        aria-hidden="true"
        class="list absolute visible bg-white shadow-menu rounded-lg p-6 transition-all duration-100 aria-hidden:-translate-y-1 aria-hidden:opacity-0 aria-hidden:invisible space-y-4"
        id={id}
      >
        {languages.map((lang) => (
          <li class="flex flex-col">
            <MenuItem
              href={buildI18nPath('/', lang.code)}
              set:text={lang.translated_name}
              aria-label={lang.translated_name}
              data-current={
                lang.code === currentLanguage.code ? 'true' : 'false'
              }
            />
          </li>
        ))}
      </ul>
    )
  }
</div>
