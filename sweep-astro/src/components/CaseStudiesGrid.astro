---
import type { HTMLAttributes } from 'astro/types';
import { cn } from '@/scripts/cn';
import type { CaseStudyCardFragment } from '@/__generated__/cms';
import type { WithAttributes } from '@/types';
import { TRANSLATIONS } from '@/constants';
import { getDefaultTopImage } from '@/scripts/getDefaultTopImage';
import Grid from './ui/Grid.astro';
import CaseStudyContent from './CaseStudyContent.astro';
import CardWithMergedImage from './CardWithMergedImage.astro';

interface CaseStudiesGridProps extends HTMLAttributes<'div'> {
  cases: CaseStudyCardFragment[];
  buttonLabel?: string;
  hasFeatured?: boolean;
  hasLongerTitle?: boolean;
}

type Props = WithAttributes<CaseStudiesGridProps>;

const {
  class: className,
  cases,
  hasFeatured = true,
  hasLongerTitle = false,
  buttonLabel = TRANSLATIONS.VIEW_CASE_STUDY,
  ...props
} = Astro.props;
---

<Grid {...props} class={cn('case-studies-grid', className)}>
  {
    cases.length > 0 &&
      cases.map((caseStudy, index) => {
        if (caseStudy.__typename !== 'CaseStudy') return null;
        const isFeatured = hasFeatured && index === 0;
        const customerMaybe = caseStudy.caseStudyAcf?.relatedCustomer?.node;
        const customer =
          customerMaybe?.__typename === 'Customer' ? customerMaybe : undefined;
        const customerLogo = customer?.customerAcf?.logo;
        const longerTitle = caseStudy.caseStudyAcf?.longerTitle;
        const title = hasLongerTitle
          ? longerTitle || customer?.title
          : customer?.title;

        return (
          <div
            class={cn('case-study', 'col-span-full lg:col-span-6', {
              'lg:col-span-full': isFeatured,
            })}
          >
            <CardWithMergedImage
              image={
                caseStudy.subpageSettings?.image ||
                getDefaultTopImage(caseStudy.__typename)
              }
              size={isFeatured ? 'lg' : 'md'}
            >
              <CaseStudyContent
                customerLogo={customerLogo}
                customerTitle={customer?.title}
                customerCategory={customer?.customerAcf?.category}
                title={title}
                uri={caseStudy.uri}
                buttonLabel={buttonLabel}
              />
            </CardWithMergedImage>
          </div>
        );
      })
  }
</Grid>
