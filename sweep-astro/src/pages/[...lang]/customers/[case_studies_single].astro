---
import { defaultLocale } from '@/i18n/config';
import {
  fetchCaseStudiesPagesStaticPaths,
  fetchCaseStudySingle,
} from '@/lib/fetchCMSData';
import { cleanURI, compareURI, prefixURI } from '@/scripts/utils-uri';
import ArticlePage from '@/templates/ArticlePage.astro';
import { createPagesStaticPaths } from '@/scripts/utils-static-paths';

export const getStaticPaths = async () => {
  const paths = await fetchCaseStudiesPagesStaticPaths();
  return createPagesStaticPaths(paths, {
    paramKey: 'case_studies_single',
    paramValueType: 'prefixed-uri',
    uriPrefix: 'case-study',
  });
};

const { params } = Astro;
const { case_studies_single: unprefixedURI, lang = defaultLocale } = params;
const rawUri = prefixURI(unprefixedURI, 'case-study');
const uri = cleanURI(rawUri, lang);

// TODO: use some kind of reusable function
if (!uri) {
  if (import.meta.env.SSR) {
    return Astro.redirect('/404');
  }

  throw new Error(`Page with uri '${rawUri}' does not exists`);
}

const data = await fetchCaseStudySingle(uri, lang);

// TODO: use some kind of reusable function
if (!compareURI(uri, data.page?.uri)) {
  if (import.meta.env.SSR) {
    return Astro.redirect('/404');
  }

  throw new Error(`Page with uri '${rawUri}' does not exists`);
}
---

<ArticlePage postType="case-study" lang={lang} data={data} />
