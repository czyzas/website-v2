---
import Top from '@/components/partials/Top.astro';
import Layout from '@/layouts/Layout.astro';
import {
  fetchContactPage,
  fetchSinglePageStaticPaths,
} from '@/lib/fetchCMSData';
import Section from '@/components/ui/Section.astro';
import Demo from '@/components/Demo.astro';
import Container from '@/components/ui/Container.astro';
import Form from '@/components/hubspot-form/Form.astro';
import SectionTitle from '@/components/partials/SectionTitle.astro';
import { parseSectionTitle } from '@/scripts/data-parsers/parseSectionTitle';
import Grid from '@/components/ui/Grid.astro';
import ButtonContainer from '@/components/ButtonContainer.astro';
import WordpressButtonLink from '@/components/WordpressButtonLink.astro';
import { linkShouldRender } from '@/scripts/data-parsers/parseLink';
import ArticleCard from '@/components/ArticleCard.astro';
import Prose from '@/components/ui/Prose.astro';
import { defaultLocale } from '@/i18n/config';
import { createSingleDefaultPageStaticPaths } from '@/scripts/utils-static-paths';
import FormContainer from '@/components/hubspot-form/FormContainer.astro';
import { cleanArray } from '@/scripts/cleanArray';
import { initializeStores } from '@/scripts/utils-store-helpers';
import ArticlesGrid from '@/components/ArticlesGrid.astro';

export async function getStaticPaths() {
  return createSingleDefaultPageStaticPaths(
    await fetchSinglePageStaticPaths('/contact')
  );
}

const { lang = defaultLocale } = Astro.params;

const data = await fetchContactPage(lang as string);
const page = data.page!;

initializeStores(data);

const form = page.contactAcf?.form;
const formGuid = form?.hubspotFormGuid ?? '';

const demo = page.contactAcf?.demo;
const updates = page.contactAcf?.updates;
const newsroomArticles = cleanArray(data.articles?.nodes);

const offices = page.contactAcf?.offices;
const officesCards = cleanArray(offices?.cards);
---

<Layout name="contact">
  <Top class="py-25" />
  {
    formGuid ? (
      <Section bg="surface-subdued" class="md:py-15">
        <Container>
          <FormContainer>
            <Form formGuid={formGuid} />
          </FormContainer>
        </Container>
      </Section>
    ) : null
  }
  <Section name="demo" bg="white">
    <Container>
      <Demo title={demo?.title} button={demo?.button} image={demo?.image} />
    </Container>
  </Section>
  <Section name="updates" bg="surface-subdued">
    <Container>
      <SectionTitle
        withMargin
        {...parseSectionTitle(updates?.sectionTitle?.selectSectionTitle)}
      />
      {
        newsroomArticles.length ? (
          <ArticlesGrid
            columns={4}
            postType="newsroom"
            posts={newsroomArticles}
          />
        ) : null
      }
      {
        linkShouldRender(updates?.button) && (
          <ButtonContainer>
            <WordpressButtonLink data={updates?.button} arrow />
          </ButtonContainer>
        )
      }
    </Container>
  </Section>
  <Section name="offices" bg="white">
    <Container>
      <SectionTitle
        withMargin
        {...parseSectionTitle(offices?.sectionTitle?.selectSectionTitle)}
      />

      {
        officesCards.length ? (
          <Grid>
            {officesCards.map((card) => (
              <ArticleCard
                image={card?.image}
                class="col-span-full sm:col-span-6 md:col-span-4"
              >
                <h3
                  class="typography-cards-bold-large"
                  set:html={card?.title}
                />
                <Prose set:html={card?.content} />
              </ArticleCard>
            ))}
          </Grid>
        ) : null
      }
    </Container>
  </Section>
</Layout>
