---
import type { InferGetStaticParamsType } from 'astro';
import { defaultLocale } from '@/i18n/config';
import {
  fetchEventPagesStaticPaths,
  fetchEventSingle,
} from '@/lib/fetchCMSData';
import { validateUri } from '@/scripts/utils-uri';
import ArticlePage from '@/templates/ArticlePage.astro';
import { createPagesStaticPaths } from '@/scripts/utils-static-paths';
import { getUrlWithoutLang } from '@/i18n/utils';

export const getStaticPaths = async () => {
  const paths = await fetchEventPagesStaticPaths();
  return createPagesStaticPaths(paths, {
    paramKey: 'event_single',
    paramValueType: 'slug',
  });
};

const params = Astro.params as InferGetStaticParamsType<typeof getStaticPaths>;
const { event_single: unprefixedUri, lang = defaultLocale } = params;

const { data, error } = await validateUri(unprefixedUri, lang, {
  prefix: 'events',
  fetcher: (uri) => fetchEventSingle(getUrlWithoutLang(uri), lang),
  onError: () => Astro.redirect('/404'),
});

if (error) return error;
---

<ArticlePage postType="event" lang={lang} data={data} />
