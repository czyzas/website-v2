---
import type { InferGetStaticParamsType } from 'astro';
import { defaultLocale } from '@/i18n/config';
import {
  fetchIndustryPagesStaticPaths,
  fetchIndustrySingle,
} from '@/lib/fetchCMSData';
import { cleanURI, compareURI, prefixURI } from '@/scripts/utils-uri';
import DefaultPage from '@/templates/DefaultPage.astro';
import { createPagesStaticPaths } from '@/scripts/utils-static-paths';

export const getStaticPaths = async () => {
  const paths = await fetchIndustryPagesStaticPaths();
  return createPagesStaticPaths(paths, {
    paramKey: 'industry',
    paramValueType: 'slug',
  });
};

const params = Astro.params as InferGetStaticParamsType<typeof getStaticPaths>;
const { industry: unprefixedURI, lang = defaultLocale } = params;
const rawUri = prefixURI(unprefixedURI, 'industry');
const uri = cleanURI(rawUri, lang);

if (!uri) {
  if (import.meta.env.SSR) {
    return Astro.redirect('/404');
  }

  throw new Error(`Page with uri '${rawUri}' does not exists`);
}

const data = await fetchIndustrySingle(uri, lang);

if (!compareURI(uri, data.page?.uri)) {
  if (import.meta.env.SSR) {
    return Astro.redirect('/404');
  }

  throw new Error(`Page with uri '${rawUri}' does not exists`);
}
---

<DefaultPage data={data} />
