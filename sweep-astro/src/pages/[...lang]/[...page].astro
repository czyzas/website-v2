---
import type { InferGetStaticParamsType } from 'astro';
import {
  fixLangParams,
  getLangParam,
  getStaticPathsWithLangs,
  getUrlWithoutLang,
} from '@/i18n/utils';
import { fetchDefaultPagesStaticPaths } from '@/lib/fetchCMSData';
import Homepage from './_index.astro';
import Page from './_page.astro';

export const getStaticPaths = async () => {
  // At the beginning we need to add homepages in all available languages
  const returnPaths = getStaticPathsWithLangs();
  const paths = await fetchDefaultPagesStaticPaths();

  for (const staticPath of paths) {
    if (
      staticPath.template?.templateName !== 'Default' ||
      !staticPath?.languageCode ||
      !staticPath?.uri
    ) {
      continue;
    }

    const paramPath = getUrlWithoutLang(staticPath.uri);

    returnPaths.push({
      params: {
        lang: getLangParam(staticPath.languageCode),
        page: paramPath,
      },
      props: staticPath,
    });
  }

  return returnPaths;
};

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { page = '' } = fixLangParams(Astro.params, 'page') as Params;
const uri = getUrlWithoutLang(page as string) || '/';
---

{uri === '/' ? <Homepage {...Astro.props} /> : <Page {...Astro.props} />}
