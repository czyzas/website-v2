---
import type { ModulesModulesContentCaseStudiesListLayout } from '@/__generated__/cms';
import CaseStudiesGrid from '@/components/CaseStudiesGrid.astro';
import ListTagFilter from '@/components/ListTagFilter.astro';
import ModuleContainer from '@/components/ModuleContainer.astro';
import Pagination from '@/components/Pagination.astro';
import PaginationContainer from '@/components/PaginationContainer.astro';
import { cleanArray } from '@/scripts/cleanArray';
import { getStore } from '@/scripts/store';
import { customersCaseStudiesStore } from '@/stores/customersCaseStudiesStore';
import type { WithModuleMeta } from '@/types';

type Props = WithModuleMeta<ModulesModulesContentCaseStudiesListLayout>;

const { __meta__, layoutName, backgroundColor } = Astro.props;
const {
  isCustomersPage,
  paged = 1,
  tag: filterTag,
  data,
} = getStore(customersCaseStudiesStore);

const cases = cleanArray(data?.articles?.nodes);
const tags = cleanArray(data?.filterTags?.nodes);
const totalPages = data!.articles?.pageInfo.pagination?.totalPages ?? 1;
const moduleId = `case-studies-${__meta__.index}`;
---

{
  isCustomersPage && cases.length > 0 && (
    <ModuleContainer
      meta={__meta__}
      name={layoutName!}
      bg={backgroundColor}
      id={moduleId}
    >
      <ListTagFilter
        allButton
        sectionId={moduleId}
        tags={tags}
        activeTag={filterTag}
        prefix="customers"
        class="my-8 md:mb-20 md:mt-12"
      />
      <CaseStudiesGrid hasFeatured={false} hasLongerTitle cases={cases} />
      <PaginationContainer>
        <Pagination
          paged={paged}
          totalPages={totalPages}
          sectionId={moduleId}
        />
      </PaginationContainer>
    </ModuleContainer>
  )
}
