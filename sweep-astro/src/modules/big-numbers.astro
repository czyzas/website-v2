---
import type { ModulesModulesContentBigNumbersLayout } from '@/__generated__/cms';
import ModuleContainer from '@/components/ModuleContainer.astro';
import { fixDoubleBr } from '@/scripts/fixDoubleBr';
import { cn } from '@/scripts/cn';
import Grid from '@/components/ui/Grid.astro';
import Card from '@/components/ui/Card.astro';
import { TRANSLATIONS } from '@/constants';
import Link from '@/components/ui/Link.astro';
import { parseLink } from '@/scripts/data-parsers/parseLink';
import CountNumber from '@/components/CountNumber.astro';
import type { WithModuleMeta } from '@/types';

type Props = WithModuleMeta<ModulesModulesContentBigNumbersLayout>;

const {
  __meta__,
  layoutName,
  backgroundColor,
  columns = '1',
  numbers: rawNumbers,
} = Astro.props;

const numbers = rawNumbers ? rawNumbers.filter(Boolean) : [];

const columnClassName: Record<number, string> = {
  1: cn('col-span-full'),
  2: cn('col-span-full sm:col-span-6'),
  3: cn('col-span-full sm:col-span-6 lg:col-span-4'),
  4: cn('col-span-full sm:col-span-6 lg:col-span-3'),
};
---

<ModuleContainer meta={__meta__} name={layoutName!} bg={backgroundColor}>
  <Grid>
    {
      numbers.map((number) => {
        const link = parseLink(number.link);
        return (
          <Card
            class={cn(
              'number',
              columnClassName?.[parseInt(columns)] ?? 'col-span-full',
              'flex flex-col gap-2'
            )}
          >
            {number.number ? (
              <CountNumber
                value={number.number}
                class="typography-number-stats"
              />
            ) : null}
            <p
              class="typography-body-large"
              set:html={fixDoubleBr(number.content)}
            />
            {link.shouldRender && (
              <div class="typography-body text-sw-text-subdued">
                <span>
                  {TRANSLATIONS.SOURCE}:{' '}
                  <Link
                    to={link.url}
                    target={link?.target}
                    set:html={link.title}
                  />
                </span>
              </div>
            )}
          </Card>
        );
      })
    }
  </Grid>
</ModuleContainer>
