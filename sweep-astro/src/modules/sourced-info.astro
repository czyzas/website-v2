---
import type { ModulesModulesContentSourcedInfoLayout } from '@/__generated__/cms';
import ModuleContainer from '@/components/ModuleContainer.astro';
import WordpressImage from '@/components/WordpressImage.astro';
import Card from '@/components/ui/Card.astro';
import Grid from '@/components/ui/Grid.astro';
import Link from '@/components/ui/Link.astro';
import Prose from '@/components/ui/Prose.astro';
import { TRANSLATIONS } from '@/constants';
import { parseLink } from '@/scripts/data-parsers/parseLink';
import type { WithModuleMeta } from '@/types';

type Props = WithModuleMeta<ModulesModulesContentSourcedInfoLayout>;

const {
  __meta__,
  layoutName,
  backgroundColor,
  content,
  image,
  sourceLink: rawSourceLink,
} = Astro.props;

const sourceLink = parseLink(rawSourceLink);
---

<ModuleContainer meta={__meta__} name={layoutName!} bg={backgroundColor}>
  <Grid>
    <Card
      class="col-span-full lg:col-start-2 lg:col-end-12 p-0 overflow-hidden flex flex-col md:flex-row"
    >
      <div
        class="column column-image md:grow-0 md:shrink-0 md:basis-1/3 md:aspect-auto"
      >
        <WordpressImage
          data={image}
          class="aspect-video md:aspect-auto w-full md:size-full object-cover"
        />
      </div>
      <div class="column column-content grow p-6 flex flex-col">
        <Prose
          class="text-black text-lg sm:typography-large-quote md:pr-5"
          set:html={content}
        />
        {
          sourceLink.shouldRender && (
            <div class="sm:typography-body text-sw-text-subdued mt-auto pt-4">
              {TRANSLATIONS.SOURCE}:{' '}
              <Link
                to={sourceLink.url}
                target={sourceLink?.target}
                set:html={sourceLink.title}
              />
            </div>
          )
        }
      </div>
    </Card>
  </Grid>
</ModuleContainer>
