---
import type { ModulesModulesContentCardsLayout } from '@/__generated__/cms';
import ModuleContainer from '@/components/ModuleContainer.astro';
import Card from '@/components/ui/Card.astro';
import Container from '@/components/ui/Container.astro';
import Grid from '@/components/ui/Grid.astro';
import { cn } from '@/scripts/cn';
import { fixDoubleBr } from '@/scripts/fixDoubleBr';

type Props = ModulesModulesContentCardsLayout;

const {
  layoutName,
  backgroundColor,
  cards: rawCards,
  columns = '1',
} = Astro.props;

const cards = rawCards ? rawCards.filter(Boolean) : [];

const columnClassName: Record<number, string> = {
  1: cn('col-span-full'),
  2: cn('col-span-full xs:col-span-6'),
  3: cn('col-span-full xs:col-span-6 md:col-span-4'),
  4: cn('col-span-full xs:col-span-6 md:col-span-4 lg:col-span-3'),
};
---

{
  cards.length > 0 && (
    <ModuleContainer name={layoutName!} bg={backgroundColor}>
      <Container>
        <Grid>
          {cards.map((card) => (
            <Card
              class={cn(
                columnClassName?.[parseInt(columns)] ?? 'col-span-full'
              )}
            >
              <h3 class="typography-h3" set:html={fixDoubleBr(card.title)} />
            </Card>
          ))}
        </Grid>
      </Container>
    </ModuleContainer>
  )
}
